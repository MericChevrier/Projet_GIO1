{"remainingRequest":"C:\\Users\\Quentin\\Documents\\Master\\Semestre_3\\GIO1\\Projet\\seed-vuejs3.0-carto2D-3D\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Users\\Quentin\\Documents\\Master\\Semestre_3\\GIO1\\Projet\\seed-vuejs3.0-carto2D-3D\\src\\components\\views\\ViewAxios.vue?vue&type=template&id=05fa2f20&scoped=true","dependencies":[{"path":"C:\\Users\\Quentin\\Documents\\Master\\Semestre_3\\GIO1\\Projet\\seed-vuejs3.0-carto2D-3D\\src\\components\\views\\ViewAxios.vue","mtime":1606559719262},{"path":"C:\\Users\\Quentin\\Documents\\Master\\Semestre_3\\GIO1\\Projet\\seed-vuejs3.0-carto2D-3D\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Quentin\\Documents\\Master\\Semestre_3\\GIO1\\Projet\\seed-vuejs3.0-carto2D-3D\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Quentin\\Documents\\Master\\Semestre_3\\GIO1\\Projet\\seed-vuejs3.0-carto2D-3D\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1606322537000},{"path":"C:\\Users\\Quentin\\Documents\\Master\\Semestre_3\\GIO1\\Projet\\seed-vuejs3.0-carto2D-3D\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Quentin\\Documents\\Master\\Semestre_3\\GIO1\\Projet\\seed-vuejs3.0-carto2D-3D\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1606322537000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogIDwhLS0gQnVsbWE6IG1lbnUgdGFicyAtLT4NCiAgPGRpdiBpZD0idHJ1bXAtY2FyZCIgY2xhc3M9ImNhcmQiPg0KICAgIDxkaXYgY2xhc3M9ImNhcmQtY29udGVudCI+DQogICAgICA8cCBjbGFzcz0idGl0bGUiPg0KICAgICAgICDigJx7e3RydW1wcXVvdGV9feKAnQ0KICAgICAgPC9wPg0KICAgICAgPHAgY2xhc3M9InN1YnRpdGxlIj4NCiAgICAgICAgVHJvbmFsZCBEdW1wDQogICAgICA8L3A+DQogICAgPC9kaXY+DQogICAgPGZvb3RlciBjbGFzcz0iY2FyZC1mb290ZXIiPg0KICAgICAgPHAgY2xhc3M9ImNhcmQtZm9vdGVyLWl0ZW0iPg0KICAgICAgICA8c3Bhbj4NCiAgICAgICAgICBDaGVjayBtb3JlIG9uIDxhIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiIDpocmVmPSJ0cm9uYWxkZHVtcFVSTCI+QFRyb25hbGQgRHVtcDwvYT4NCiAgICAgICAgPC9zcGFuPg0KICAgICAgPC9wPg0KICAgIDwvZm9vdGVyPg0KICA8L2Rpdj4NCiAgPCEtLSBlbmQgQnVsbWE6IG1lbnUgdGFicyAtLT4NCg=="},{"version":3,"sources":["C:\\Users\\Quentin\\Documents\\Master\\Semestre_3\\GIO1\\Projet\\seed-vuejs3.0-carto2D-3D\\src\\components\\views\\ViewAxios.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;EACxB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/B,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACvB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACjB,CAAC,CAAC,CAAC;MACH,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;MACb,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACzB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC,CAAC,CAAC;UACH,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACpG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACR,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACV,CAAC,CAAC,CAAC,CAAC,CAAC;EACL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC","file":"C:/Users/Quentin/Documents/Master/Semestre_3/GIO1/Projet/seed-vuejs3.0-carto2D-3D/src/components/views/ViewAxios.vue","sourceRoot":"","sourcesContent":["<template>\r\n  <!-- Bulma: menu tabs -->\r\n  <div id=\"trump-card\" class=\"card\">\r\n    <div class=\"card-content\">\r\n      <p class=\"title\">\r\n        “{{trumpquote}}”\r\n      </p>\r\n      <p class=\"subtitle\">\r\n        Tronald Dump\r\n      </p>\r\n    </div>\r\n    <footer class=\"card-footer\">\r\n      <p class=\"card-footer-item\">\r\n        <span>\r\n          Check more on <a target=\"_blank\" rel=\"noopener noreferrer\" :href=\"tronalddumpURL\">@Tronald Dump</a>\r\n        </span>\r\n      </p>\r\n    </footer>\r\n  </div>\r\n  <!-- end Bulma: menu tabs -->\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  data(){\r\n    return{\r\n      tronalddumpURL:\"https://www.tronalddump.io/\",\r\n      apiURL:\"https://api.tronalddump.io/search/quote?query=\",\r\n      query:\"apologize\",\r\n      trumpquote:\"\"\r\n    }\r\n  },\r\n  methods: {\r\n    /**\r\n     * [Get] dumb quote from Donald Trump\r\n     * \r\n     * @param {String} url url of the api\r\n     * @param {String} query query send to the api (word)\r\n     * @returns {Promise<String>} quote from the API || default string if quote not found || default string if error\r\n     * @catch error from the request \r\n     */\r\n    async getTrumptweet(url,query){\r\n      let response = await axios.get(url+query)\r\n      .catch(error => {\r\n        console.error(error);\r\n        return 0\r\n      })\r\n      //request error\r\n      if(response == 0){\r\n        return \"Ouch an error occurred\"\r\n      }\r\n      // don't find an answer\r\n      if(response.data.count == 0){\r\n        return \"Didn't found any answers\"\r\n      }\r\n      // Get first quote\r\n      return response.data._embedded.quotes[0].value;\r\n    }\r\n  },\r\n  async mounted() {\r\n    this.trumpquote = await this.getTrumptweet(this.apiURL,this.query)\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n#trump-card{\r\n  width: 50%;\r\n  margin: auto;\r\n}\r\n</style>\r\n"]}]}