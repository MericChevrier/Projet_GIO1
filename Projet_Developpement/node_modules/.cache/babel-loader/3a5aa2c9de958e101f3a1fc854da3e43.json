{"remainingRequest":"C:\\Users\\Quentin\\Documents\\Master\\Semestre_3\\GIO1\\Projet\\seed-vuejs3.0-carto2D-3D\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Quentin\\Documents\\Master\\Semestre_3\\GIO1\\Projet\\seed-vuejs3.0-carto2D-3D\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Quentin\\Documents\\Master\\Semestre_3\\GIO1\\Projet\\seed-vuejs3.0-carto2D-3D\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Users\\Quentin\\Documents\\Master\\Semestre_3\\GIO1\\Projet\\seed-vuejs3.0-carto2D-3D\\src\\components\\views\\ViewAxios.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\Quentin\\Documents\\Master\\Semestre_3\\GIO1\\Projet\\seed-vuejs3.0-carto2D-3D\\src\\components\\views\\ViewAxios.vue","mtime":1606559719262},{"path":"C:\\Users\\Quentin\\Documents\\Master\\Semestre_3\\GIO1\\Projet\\seed-vuejs3.0-carto2D-3D\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Quentin\\Documents\\Master\\Semestre_3\\GIO1\\Projet\\seed-vuejs3.0-carto2D-3D\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Quentin\\Documents\\Master\\Semestre_3\\GIO1\\Projet\\seed-vuejs3.0-carto2D-3D\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Quentin\\Documents\\Master\\Semestre_3\\GIO1\\Projet\\seed-vuejs3.0-carto2D-3D\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1606322537000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiQzovVXNlcnMvUXVlbnRpbi9Eb2N1bWVudHMvTWFzdGVyL1NlbWVzdHJlXzMvR0lPMS9Qcm9qZXQvc2VlZC12dWVqczMuMC1jYXJ0bzJELTNEL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB0cm9uYWxkZHVtcFVSTDogImh0dHBzOi8vd3d3LnRyb25hbGRkdW1wLmlvLyIsCiAgICAgIGFwaVVSTDogImh0dHBzOi8vYXBpLnRyb25hbGRkdW1wLmlvL3NlYXJjaC9xdW90ZT9xdWVyeT0iLAogICAgICBxdWVyeTogImFwb2xvZ2l6ZSIsCiAgICAgIHRydW1wcXVvdGU6ICIiCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgLyoqDQogICAgICogW0dldF0gZHVtYiBxdW90ZSBmcm9tIERvbmFsZCBUcnVtcA0KICAgICAqIA0KICAgICAqIEBwYXJhbSB7U3RyaW5nfSB1cmwgdXJsIG9mIHRoZSBhcGkNCiAgICAgKiBAcGFyYW0ge1N0cmluZ30gcXVlcnkgcXVlcnkgc2VuZCB0byB0aGUgYXBpICh3b3JkKQ0KICAgICAqIEByZXR1cm5zIHtQcm9taXNlPFN0cmluZz59IHF1b3RlIGZyb20gdGhlIEFQSSB8fCBkZWZhdWx0IHN0cmluZyBpZiBxdW90ZSBub3QgZm91bmQgfHwgZGVmYXVsdCBzdHJpbmcgaWYgZXJyb3INCiAgICAgKiBAY2F0Y2ggZXJyb3IgZnJvbSB0aGUgcmVxdWVzdCANCiAgICAgKi8KICAgIGdldFRydW1wdHdlZXQ6IGZ1bmN0aW9uIGdldFRydW1wdHdlZXQodXJsLCBxdWVyeSkgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciByZXNwb25zZTsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBheGlvcy5nZXQodXJsICsgcXVlcnkpLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKGVycm9yKTsKICAgICAgICAgICAgICAgICAgcmV0dXJuIDA7CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dC5zZW50OwoKICAgICAgICAgICAgICAgIGlmICghKHJlc3BvbnNlID09IDApKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA1OwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCAiT3VjaCBhbiBlcnJvciBvY2N1cnJlZCIpOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgICBpZiAoIShyZXNwb25zZS5kYXRhLmNvdW50ID09IDApKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA3OwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCAiRGlkbid0IGZvdW5kIGFueSBhbnN3ZXJzIik7CgogICAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIHJlc3BvbnNlLmRhdGEuX2VtYmVkZGVkLnF1b3Rlc1swXS52YWx1ZSk7CgogICAgICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMjsKICAgICAgICAgICAgICByZXR1cm4gX3RoaXMuZ2V0VHJ1bXB0d2VldChfdGhpcy5hcGlVUkwsIF90aGlzLnF1ZXJ5KTsKCiAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICBfdGhpcy50cnVtcHF1b3RlID0gX2NvbnRleHQyLnNlbnQ7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMik7CiAgICB9KSkoKTsKICB9Cn07"},{"version":3,"sources":["C:\\Users\\Quentin\\Documents\\Master\\Semestre_3\\GIO1\\Projet\\seed-vuejs3.0-carto2D-3D\\src\\components\\views\\ViewAxios.vue"],"names":[],"mappings":";;AAuBA,OAAO,KAAP,MAAkB,OAAlB;AAEA,eAAe;AACb,EAAA,IADa,kBACP;AACJ,WAAM;AACJ,MAAA,cAAc,EAAC,6BADX;AAEJ,MAAA,MAAM,EAAC,gDAFH;AAGJ,MAAA,KAAK,EAAC,WAHF;AAIJ,MAAA,UAAU,EAAC;AAJP,KAAN;AAMD,GARY;AASb,EAAA,OAAO,EAAE;AACP;AACC;AACA;AACA;AACA;AACA;AACA;AACA;AACK,IAAA,aATC,yBASa,GATb,EASiB,KATjB,EASuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACP,KAAK,CAAC,GAAN,CAAU,GAAG,GAAC,KAAd,EACpB,KADoB,CACd,UAAA,KAAI,EAAK;AACd,kBAAA,OAAO,CAAC,KAAR,CAAc,KAAd;AACA,yBAAO,CAAP;AACD,iBAJoB,CADO;;AAAA;AACxB,gBAAA,QADwB;;AAAA,sBAOzB,QAAO,IAAK,CAPa;AAAA;AAAA;AAAA;;AAAA,iDAQnB,wBARmB;;AAAA;AAAA,sBAWzB,QAAQ,CAAC,IAAT,CAAc,KAAd,IAAuB,CAXE;AAAA;AAAA;AAAA;;AAAA,iDAYnB,0BAZmB;;AAAA;AAAA,iDAerB,QAAQ,CAAC,IAAT,CAAc,SAAd,CAAwB,MAAxB,CAA+B,CAA/B,EAAkC,KAfb;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgB9B;AAzBO,GATI;AAoCP,EAAA,OApCO,qBAoCG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACU,KAAI,CAAC,aAAL,CAAmB,KAAI,CAAC,MAAxB,EAA+B,KAAI,CAAC,KAApC,CADV;;AAAA;AACd,cAAA,KAAI,CAAC,UADS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEf;AAtCY,CAAf","sourcesContent":["<template>\r\n  <!-- Bulma: menu tabs -->\r\n  <div id=\"trump-card\" class=\"card\">\r\n    <div class=\"card-content\">\r\n      <p class=\"title\">\r\n        “{{trumpquote}}”\r\n      </p>\r\n      <p class=\"subtitle\">\r\n        Tronald Dump\r\n      </p>\r\n    </div>\r\n    <footer class=\"card-footer\">\r\n      <p class=\"card-footer-item\">\r\n        <span>\r\n          Check more on <a target=\"_blank\" rel=\"noopener noreferrer\" :href=\"tronalddumpURL\">@Tronald Dump</a>\r\n        </span>\r\n      </p>\r\n    </footer>\r\n  </div>\r\n  <!-- end Bulma: menu tabs -->\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  data(){\r\n    return{\r\n      tronalddumpURL:\"https://www.tronalddump.io/\",\r\n      apiURL:\"https://api.tronalddump.io/search/quote?query=\",\r\n      query:\"apologize\",\r\n      trumpquote:\"\"\r\n    }\r\n  },\r\n  methods: {\r\n    /**\r\n     * [Get] dumb quote from Donald Trump\r\n     * \r\n     * @param {String} url url of the api\r\n     * @param {String} query query send to the api (word)\r\n     * @returns {Promise<String>} quote from the API || default string if quote not found || default string if error\r\n     * @catch error from the request \r\n     */\r\n    async getTrumptweet(url,query){\r\n      let response = await axios.get(url+query)\r\n      .catch(error => {\r\n        console.error(error);\r\n        return 0\r\n      })\r\n      //request error\r\n      if(response == 0){\r\n        return \"Ouch an error occurred\"\r\n      }\r\n      // don't find an answer\r\n      if(response.data.count == 0){\r\n        return \"Didn't found any answers\"\r\n      }\r\n      // Get first quote\r\n      return response.data._embedded.quotes[0].value;\r\n    }\r\n  },\r\n  async mounted() {\r\n    this.trumpquote = await this.getTrumptweet(this.apiURL,this.query)\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n#trump-card{\r\n  width: 50%;\r\n  margin: auto;\r\n}\r\n</style>\r\n"],"sourceRoot":""}]}