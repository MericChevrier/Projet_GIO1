{"remainingRequest":"C:\\Users\\Quentin\\Documents\\Master\\Semestre_3\\GIO1\\Projet\\seed-vuejs3.0-carto2D-3D\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Quentin\\Documents\\Master\\Semestre_3\\GIO1\\Projet\\seed-vuejs3.0-carto2D-3D\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\templateLoader.js??ref--6!C:\\Users\\Quentin\\Documents\\Master\\Semestre_3\\GIO1\\Projet\\seed-vuejs3.0-carto2D-3D\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Quentin\\Documents\\Master\\Semestre_3\\GIO1\\Projet\\seed-vuejs3.0-carto2D-3D\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Users\\Quentin\\Documents\\Master\\Semestre_3\\GIO1\\Projet\\seed-vuejs3.0-carto2D-3D\\src\\components\\views\\ViewAxios.vue?vue&type=template&id=05fa2f20&scoped=true","dependencies":[{"path":"C:\\Users\\Quentin\\Documents\\Master\\Semestre_3\\GIO1\\Projet\\seed-vuejs3.0-carto2D-3D\\src\\components\\views\\ViewAxios.vue","mtime":1606559719262},{"path":"C:\\Users\\Quentin\\Documents\\Master\\Semestre_3\\GIO1\\Projet\\seed-vuejs3.0-carto2D-3D\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Quentin\\Documents\\Master\\Semestre_3\\GIO1\\Projet\\seed-vuejs3.0-carto2D-3D\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Quentin\\Documents\\Master\\Semestre_3\\GIO1\\Projet\\seed-vuejs3.0-carto2D-3D\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1606322537000},{"path":"C:\\Users\\Quentin\\Documents\\Master\\Semestre_3\\GIO1\\Projet\\seed-vuejs3.0-carto2D-3D\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Quentin\\Documents\\Master\\Semestre_3\\GIO1\\Projet\\seed-vuejs3.0-carto2D-3D\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1606322537000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlQ29tbWVudFZOb2RlIGFzIF9jcmVhdGVDb21tZW50Vk5vZGUsIHRvRGlzcGxheVN0cmluZyBhcyBfdG9EaXNwbGF5U3RyaW5nLCBjcmVhdGVWTm9kZSBhcyBfY3JlYXRlVk5vZGUsIGNyZWF0ZVRleHRWTm9kZSBhcyBfY3JlYXRlVGV4dFZOb2RlLCBGcmFnbWVudCBhcyBfRnJhZ21lbnQsIG9wZW5CbG9jayBhcyBfb3BlbkJsb2NrLCBjcmVhdGVCbG9jayBhcyBfY3JlYXRlQmxvY2ssIHdpdGhTY29wZUlkIGFzIF93aXRoU2NvcGVJZCwgcHVzaFNjb3BlSWQgYXMgX3B1c2hTY29wZUlkLCBwb3BTY29wZUlkIGFzIF9wb3BTY29wZUlkIH0gZnJvbSAidnVlIjsKCnZhciBfd2l0aElkID0gLyojX19QVVJFX18qL193aXRoU2NvcGVJZCgiZGF0YS12LTA1ZmEyZjIwIik7CgpfcHVzaFNjb3BlSWQoImRhdGEtdi0wNWZhMmYyMCIpOwoKdmFyIF9ob2lzdGVkXzEgPSB7CiAgaWQ6ICJ0cnVtcC1jYXJkIiwKICBjbGFzczogImNhcmQiCn07CnZhciBfaG9pc3RlZF8yID0gewogIGNsYXNzOiAiY2FyZC1jb250ZW50Igp9Owp2YXIgX2hvaXN0ZWRfMyA9IHsKICBjbGFzczogInRpdGxlIgp9OwoKdmFyIF9ob2lzdGVkXzQgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJwIiwgewogIGNsYXNzOiAic3VidGl0bGUiCn0sICIgVHJvbmFsZCBEdW1wICIsIC0xCi8qIEhPSVNURUQgKi8KKTsKCnZhciBfaG9pc3RlZF81ID0gewogIGNsYXNzOiAiY2FyZC1mb290ZXIiCn07CnZhciBfaG9pc3RlZF82ID0gewogIGNsYXNzOiAiY2FyZC1mb290ZXItaXRlbSIKfTsKCnZhciBfaG9pc3RlZF83ID0gLyojX19QVVJFX18qL19jcmVhdGVUZXh0Vk5vZGUoIiBDaGVjayBtb3JlIG9uICIpOwoKX3BvcFNjb3BlSWQoKTsKCmV4cG9ydCB2YXIgcmVuZGVyID0gLyojX19QVVJFX18qL193aXRoSWQoZnVuY3Rpb24gcmVuZGVyKF9jdHgsIF9jYWNoZSwgJHByb3BzLCAkc2V0dXAsICRkYXRhLCAkb3B0aW9ucykgewogIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jayhfRnJhZ21lbnQsIG51bGwsIFtfY3JlYXRlQ29tbWVudFZOb2RlKCIgQnVsbWE6IG1lbnUgdGFicyAiKSwgX2NyZWF0ZVZOb2RlKCJkaXYiLCBfaG9pc3RlZF8xLCBbX2NyZWF0ZVZOb2RlKCJkaXYiLCBfaG9pc3RlZF8yLCBbX2NyZWF0ZVZOb2RlKCJwIiwgX2hvaXN0ZWRfMywgIiDigJwiICsgX3RvRGlzcGxheVN0cmluZygkZGF0YS50cnVtcHF1b3RlKSArICLigJ0gIiwgMQogIC8qIFRFWFQgKi8KICApLCBfaG9pc3RlZF80XSksIF9jcmVhdGVWTm9kZSgiZm9vdGVyIiwgX2hvaXN0ZWRfNSwgW19jcmVhdGVWTm9kZSgicCIsIF9ob2lzdGVkXzYsIFtfY3JlYXRlVk5vZGUoInNwYW4iLCBudWxsLCBbX2hvaXN0ZWRfNywgX2NyZWF0ZVZOb2RlKCJhIiwgewogICAgdGFyZ2V0OiAiX2JsYW5rIiwKICAgIHJlbDogIm5vb3BlbmVyIG5vcmVmZXJyZXIiLAogICAgaHJlZjogJGRhdGEudHJvbmFsZGR1bXBVUkwKICB9LCAiQFRyb25hbGQgRHVtcCIsIDgKICAvKiBQUk9QUyAqLwogICwgWyJocmVmIl0pXSldKV0pXSksIF9jcmVhdGVDb21tZW50Vk5vZGUoIiBlbmQgQnVsbWE6IG1lbnUgdGFicyAiKV0sIDY0CiAgLyogU1RBQkxFX0ZSQUdNRU5UICovCiAgKTsKfSk7"},{"version":3,"sources":["C:\\Users\\Quentin\\Documents\\Master\\Semestre_3\\GIO1\\Projet\\seed-vuejs3.0-carto2D-3D\\src\\components\\views\\ViewAxios.vue"],"names":[],"mappings":";;;;;;;AAEO,EAAA,EAAE,EAAC,Y;AAAa,EAAA,KAAK,EAAC;;;AACpB,EAAA,KAAK,EAAC;;;AACN,EAAA,KAAK,EAAC;;;8BAGT,YAAA,CAEI,GAFJ,EAEI;AAFD,EAAA,KAAK,EAAC;AAEL,CAFJ,EAAoB,gBAApB,EAEA,CAAA;AAAA;AAFA,C;;;AAIM,EAAA,KAAK,EAAC;;;AACT,EAAA,KAAK,EAAC;;;+CACD,iB;;;;;sDAZZ,mBAAA,CAAA,oBAAA,C,EACA,YAAA,CAgBM,KAhBN,EAAA,UAAA,EAgBM,CAfJ,YAAA,CAOM,KAPN,EAAA,UAAA,EAOM,CANJ,YAAA,CAEI,GAFJ,EAAA,UAAA,EAAiB,OACd,gBAAA,CAAE,KAAA,CAAA,UAAF,CADc,GACA,IADjB,EAEA;AAAA;AAFA,GAMI,EAHJ,UAGI,CAPN,CAeI,EAPJ,YAAA,CAMS,QANT,EAAA,UAAA,EAMS,CALP,YAAA,CAII,GAJJ,EAAA,UAAA,EAII,CAHF,YAAA,CAEO,MAFP,EAEO,IAFP,EAEO,C,UAAA,EADS,YAAA,CAAqF,GAArF,EAAqF;AAAlF,IAAA,MAAM,EAAC,QAA2E;AAAlE,IAAA,GAAG,EAAC,qBAA8D;AAAvC,IAAA,IAAI,EAAE,KAAA,CAAA;AAAiC,GAArF,EAAoE,eAApE,EAAiF;AAAA;AAAjF,IAAiF,CAAA,MAAA,CAAjF,CACT,CAFP,CAGE,CAJJ,CAKO,CANT,CAOI,CAhBN,C,EAiBA,mBAAA,CAAA,wBAAA,C","sourcesContent":["<template>\r\n  <!-- Bulma: menu tabs -->\r\n  <div id=\"trump-card\" class=\"card\">\r\n    <div class=\"card-content\">\r\n      <p class=\"title\">\r\n        “{{trumpquote}}”\r\n      </p>\r\n      <p class=\"subtitle\">\r\n        Tronald Dump\r\n      </p>\r\n    </div>\r\n    <footer class=\"card-footer\">\r\n      <p class=\"card-footer-item\">\r\n        <span>\r\n          Check more on <a target=\"_blank\" rel=\"noopener noreferrer\" :href=\"tronalddumpURL\">@Tronald Dump</a>\r\n        </span>\r\n      </p>\r\n    </footer>\r\n  </div>\r\n  <!-- end Bulma: menu tabs -->\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  data(){\r\n    return{\r\n      tronalddumpURL:\"https://www.tronalddump.io/\",\r\n      apiURL:\"https://api.tronalddump.io/search/quote?query=\",\r\n      query:\"apologize\",\r\n      trumpquote:\"\"\r\n    }\r\n  },\r\n  methods: {\r\n    /**\r\n     * [Get] dumb quote from Donald Trump\r\n     * \r\n     * @param {String} url url of the api\r\n     * @param {String} query query send to the api (word)\r\n     * @returns {Promise<String>} quote from the API || default string if quote not found || default string if error\r\n     * @catch error from the request \r\n     */\r\n    async getTrumptweet(url,query){\r\n      let response = await axios.get(url+query)\r\n      .catch(error => {\r\n        console.error(error);\r\n        return 0\r\n      })\r\n      //request error\r\n      if(response == 0){\r\n        return \"Ouch an error occurred\"\r\n      }\r\n      // don't find an answer\r\n      if(response.data.count == 0){\r\n        return \"Didn't found any answers\"\r\n      }\r\n      // Get first quote\r\n      return response.data._embedded.quotes[0].value;\r\n    }\r\n  },\r\n  async mounted() {\r\n    this.trumpquote = await this.getTrumptweet(this.apiURL,this.query)\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n#trump-card{\r\n  width: 50%;\r\n  margin: auto;\r\n}\r\n</style>\r\n"],"sourceRoot":""}]}